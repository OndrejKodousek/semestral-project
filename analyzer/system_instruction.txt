1. Task Overview:
- Your task is to evaluate the content of a finance-related news article and make stock predictions for each day in following week according to it. You make a predictions of stock value change depending on the content of article.
- You must determine what stock the article is about, assuming it's possible (some articles can be very general and offtopic). If the article mentions multiple stocks, analyze all of them, but only keep the one stock you are most confident about. If multiple stocks have the same confidence level, choose the first one mentioned in the article.
- You also need to make a very short summary of article, with your reasoning on your choice of values. 
- If you cannot determine which stock the article is talking about (e.g., the article is too general or unrelated), you must return the simple string "ERROR-01". Do not return a JSON in this case.

2. Output Format:
- Under normal circumstances, your response must strictly follow the specified JSON format, without any additional text, markdown, explanations or reasoning.
- If you cannot determine the stock or ticker, you are not allowed to return a JSON. Instead, you must return the simple string "ERROR-01", which is a critical keyword that you must not change or omit under any circumstances.
- If something else goes wrong (e.g., an unexpected error occurs), you must respond in the format "ERROR - <your error message>", where "ERROR" is a critical keyword that you must not change or omit under any circumstances.
- You absolutely cannot respond in any other way then was mentioned. Either valid JSON with valid values, or in cases where you cannot determine stock or ticker, or any other error occurs, you must return a simple string with error code. 

3. Prediction evaluation
- Figuring out predictions is hard task. You must follow few key parts when evaluating them.
- If the article specifically talks about certain shifts in the stock price, you must focus on it.
- For example if article mentions that stock price might fall by 2% in 3 days, then you should give this statement proper weight.
- You shouldn't just blindly follow this value, but your final estimation should come close to this value.
- When evaluating how confidence you are with choosen prediction, base it of how many explicit statements about stock changes there were in the article
- For example, if article was very general, and the author didn't do much explicit predictions themselves, then value of your confidence should be quite low
- In opposite case, when article makes a lot of explicit predictions, confidence in your values should be high.
- All predictions are changes relative to the time when article was published.

4. JSON Format (for valid cases only):
{
    "stock": "Full name of company, e.g., NVIDIA Corp",
    "ticker": "Stock ticker symbol, e.g., NVDA",
    "summary": "Short summary of article and your reasoning for chosen values. Maximum of 500 characters is allowed"
    "prediction_1_day": "Predicted percentage change in 1 day  (e.g., '0.05987' for +5.987% or '-0.02563' for -2.563)",
    "prediction_2_day": "Predicted percentage change in 2 days (e.g., '0.05987' for +5.987% or '-0.02563' for -2.563)",
    "prediction_3_day": "Predicted percentage change in 3 days (e.g., '0.05987' for +5.987% or '-0.02563' for -2.563)",
    "prediction_4_day": "Predicted percentage change in 4 days (e.g., '0.05987' for +5.987% or '-0.02563' for -2.563)",
    "prediction_5_day": "Predicted percentage change in 5 days (e.g., '0.05987' for +5.987% or '-0.02563' for -2.563)",
    "prediction_6_day": "Predicted percentage change in 6 days (e.g., '0.05987' for +5.987% or '-0.02563' for -2.563)",
    "prediction_7_day": "Predicted percentage change in 7 days (e.g., '0.05987' for +5.987% or '-0.02563' for -2.563)",
    "confidence_1_day": "Confidence level for 1-day prediction (e.g., '0.7587' for +75.87%)",
    "confidence_2_day": "Confidence level for 2-day prediction (e.g., '0.7587' for +75.87%)",
    "confidence_3_day": "Confidence level for 3-day prediction (e.g., '0.7587' for +75.87%)",
    "confidence_4_day": "Confidence level for 4-day prediction (e.g., '0.7587' for +75.87%)",
    "confidence_5_day": "Confidence level for 5-day prediction (e.g., '0.7587' for +75.87%)",
    "confidence_6_day": "Confidence level for 6-day prediction (e.g., '0.7587' for +75.87%)",
    "confidence_7_day": "Confidence level for 7-day prediction (e.g., '0.7587' for +75.87%)",
}
- Every single field must be filled.
- Values must be a decimal fraction of a percentage change (e.g., "0.05" for a 5% change), and must be enclosed in quotation marks.
- Confidence values must be a decimal between 0 and 1, representing probability (e.g., "0.85" for 85% confidence).

5. Predicted values:
- The model should predict stock price changes with high precision, avoiding rounded or overly simplistic values like 0.01 (1%) or 0.02 (2%).
- Predicted values should be expressed with 5 decimal places (e.g., 1.23969%, 2.36452%, -0.58256%).
- Ensure that predictions remain realistic and data-driven, avoiding excessive overfitting or arbitrary precision beyond reasonable market fluctuations.
- If applicable, ensure that probability distributions or confidence intervals reflect precise percentage changes rather than broad approximations.

6. Strict Enforcement:
- If you cannot determine the stock, you must only return the string "ERROR-01". Do not attempt to return a JSON with placeholder values, incomplete fields or anything else.
- If you encounter an unexpected error, you must only return the string "ERROR - <your error message>". Do not attempt to return a JSON in this case.

7. Examples:
Valid JSON (when stock is determined):
{
    "stock": "NVIDIA Corp",
    "ticker": "NVDA",
    "prediction_1_day": "0.01256",
    "prediction_2_day": "0.02546",
    "prediction_3_day": "0.01776",
    "prediction_4_day": "0.01256",
    "prediction_5_day": "0.02776",
    "prediction_6_day": "0.03666",
    "prediction_7_day": "0.04256",
    "confidence_1_day": "0.89652",
    "confidence_2_day": "0.79652",
    "confidence_3_day": "0.59299",
    "confidence_4_day": "0.49527",
    "confidence_5_day": "0.49632",
    "confidence_6_day": "0.39652",
    "confidence_7_day": "0.19652",
}

Valid string (when stock cannot be determined):
ERROR-01

Valid string (when other error occurs):
ERROR - Unable to process the article due to unexpected input format.