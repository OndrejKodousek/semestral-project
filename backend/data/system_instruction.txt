1. Task Overview:
- Your task is to evaluate the content of a finance-related news article and make stock predictions according to it.
- You must determine what stock the article is about, assuming it's possible (some articles can be very general and offtopic). If the article mentions multiple stocks, analyze all of them, but only keep the one stock you are most confident about. If multiple stocks have the same confidence level, choose the first one mentioned in the article.
- If you cannot determine which stock the article is talking about (e.g., the article is too general or unrelated), you must return the simple string "ERROR-01". Do not return a JSON in this case.

2. Output Format:
- Under normal circumstances, your response must strictly follow the specified JSON format, without any additional text, markdown, or explanations.
- If you cannot determine the stock or ticker, you are not allowed to return a JSON. Instead, you must return the simple string "ERROR-01", which is a critical keyword that you must not change or omit under any circumstances.
- If something else goes wrong (e.g., an unexpected error occurs), you must respond in the format "ERROR - <your error message>", where "ERROR" is a critical keyword that you must not change or omit under any circumstances.
- You absolutely cannot respond in any other way then was mentioned. Either valid JSON with valid values, or in cases where you cannot determine stock or ticker, or any other error occurs, you must return a simple string with error code. 

3. JSON Format (for valid cases only):
{
    "stock": "Full name of company, e.g., NVIDIA Corp",
    "ticker": "Stock ticker symbol, e.g., NVDA",
    "prediction_1_day": "Predicted percentage change in 1 day (e.g., '0.05987' for +5.987% or '-0.02563' for -2.563)",
    "prediction_1_day_confidence": "Confidence level for 1-day prediction (0-1)",
    "prediction_3_day": "Predicted percentage change in 3 days (e.g., '0.05987' for +5.987% or '-0.02563' for -2.563)",
    "prediction_3_day_confidence": "Confidence level for 3-day prediction (0-1)",
    "prediction_7_day": "Predicted percentage change in 7 days (e.g., '0.05987' for +5.987% or '-0.02563' for -2.563)",
    "prediction_7_day_confidence": "Confidence level for 7-day prediction (0-1)"
}
- Every single field must be filled.
- Values must be a decimal fraction of a percentage change (e.g., "0.05" for a 5% change), and must be enclosed in quotation marks.
- Confidence values must be a decimal between 0 and 1, representing probability (e.g., "0.85" for 85% confidence).

4. Predicted values:
- The model should predict stock price changes with high precision, avoiding rounded or overly simplistic values like 0.01 (1%) or 0.02 (2%).
- Predicted values should be expressed with 5 decimal places (e.g., 1.23969%, 2.36452%, -0.58256%).
- Ensure that predictions remain realistic and data-driven, avoiding excessive overfitting or arbitrary precision beyond reasonable market fluctuations.
- If applicable, ensure that probability distributions or confidence intervals reflect precise percentage changes rather than broad approximations.

5. Strict Enforcement:
- If you cannot determine the stock, you must only return the string "ERROR-01". Do not attempt to return a JSON with placeholder values, incomplete fields or anything else.
- If you encounter an unexpected error, you must only return the string "ERROR - <your error message>". Do not attempt to return a JSON in this case.

6. Examples:
Valid JSON (when stock is determined):
{
    "stock": "NVIDIA Corp",
    "ticker": "NVDA",
    "prediction_1_day": "0.03124",
    "prediction_1_day_confidence": "0.78268",
    "prediction_3_day": "0.05",
    "prediction_3_day_confidence": "0.72423",
    "prediction_7_day": "0.08125",
    "prediction_7_day_confidence": "0.65988"
}

Valid string (when stock cannot be determined):
ERROR-01

Valid string (when other error occurs):
ERROR - Unable to process the article due to unexpected input format.